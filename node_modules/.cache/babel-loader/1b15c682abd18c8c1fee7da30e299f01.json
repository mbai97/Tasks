{"remainingRequest":"/home/mbai/task/node_modules/thread-loader/dist/cjs.js!/home/mbai/task/node_modules/babel-loader/lib/index.js!/home/mbai/task/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/mbai/task/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mbai/task/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/mbai/task/src/views/Home.vue?vue&type=template&id=b6c7c410","dependencies":[{"path":"/home/mbai/task/src/views/Home.vue","mtime":1631608663361},{"path":"/home/mbai/task/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbai/task/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbai/task/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mbai/task/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/home/mbai/task/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbai/task/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgdlNob3cgYXMgX3ZTaG93LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X0FkZFRhc2sgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQWRkVGFzayIpOwoKICB2YXIgX2NvbXBvbmVudF9UYXNrcyA9IF9yZXNvbHZlQ29tcG9uZW50KCJUYXNrcyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW193aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BZGRUYXNrLCB7CiAgICBvbkFkZFRhc2s6ICRvcHRpb25zLmFkZFRhc2sKICB9LCBudWxsLCA4LCBbIm9uQWRkVGFzayJdKSwgW1tfdlNob3csICRwcm9wcy5zaG93QWRkVGFza11dKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfVGFza3MsIHsKICAgIG9uVG9nZ2xlUmVtaW5kZXI6ICRvcHRpb25zLnRvZ2dsZVJlbWluZGVyLAogICAgb25EZWxldGVUYXNrOiAkb3B0aW9ucy5kZWxldGVUYXNrLAogICAgdGFza3M6ICRkYXRhLnRhc2tzCiAgfSwgbnVsbCwgOCwgWyJvblRvZ2dsZVJlbWluZGVyIiwgIm9uRGVsZXRlVGFzayIsICJ0YXNrcyJdKV0sIDY0KTsKfQ=="},{"version":3,"sources":["/home/mbai/task/src/views/Home.vue"],"names":[],"mappings":";;;;;;6EAEQ,YAAA,CAAoD,kBAApD,EAAoD;AAArB,IAAA,SAAQ,EAAE,QAAA,CAAA;AAAW,GAApD,EAAgD,IAAhD,EAAgD,CAAhD,EAAgD,CAAA,WAAA,CAAhD,C,EAAgD,C,SAA/B,MAAA,CAAA,W,CAA+B,C,GAGtD,YAAA,CAGE,gBAHF,EAGE;AAFA,IAAA,gBAAe,EAAE,QAAA,CAAA,cAEjB;AADD,IAAA,YAAW,EAAE,QAAA,CAAA,UACZ;AADyB,IAAA,KAAK,EAAE,KAAA,CAAA;AAChC,GAHF,E,IAAA,E,CAAA,E,6CAAA,C","sourcesContent":["<template>\n   \n        <AddTask v-show=\"showAddTask\" @add-task=\"addTask\" />\n    \n\n  <Tasks\n   @toggle-reminder=\"toggleReminder\" \n  @delete-task=\"deleteTask\" :tasks=\"tasks\" \n  />\n\n</template>\n\n<script>\nimport Tasks from '../components/Tasks'\nimport AddTask from '../components/AddTask'\n\nexport default {\n    name: 'Home',\n    props: {\n        showAddTask: Boolean,\n    },\n    components: {\n        Tasks,\n        AddTask,\n    },\n    data() {\n        return {\n            tasks: [],\n        }\n    },\n\n    methods: {\n        async addTask(task) {\n        const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n    })\n\n      const data = await res.json()\n      this.tasks = [...this.tasks, data]\n\n    },\n    \n    async deleteTask(id) {\n      if (confirm('Are You Sure?')){\n\n        const res = await fetch(`api/tasks/${id}`,\n        {\n          method: 'DELETE'\n        })\n\n        res.status ===200 ? \n        (this.tasks = this.tasks.filter((task) => task.id !== id))\n        : alert('Error deletin task')\n      }\n    },\n    async toggleReminder(id) {\n\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = {...taskToToggle, reminder:\n      !taskToToggle.reminder}\n\n      const res = await fetch(`api/tasks/${id}`, \n      {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask),\n      })\n\n      const data = await res.json()\n\n      this.tasks = this.tasks.map((task) => task.id === id ? \n      {...task, reminder: data.reminder } : task)\n    },\n\n\n    async fetchTasks() {\n      const res = await fetch('api/tasks')\n\n      const data = await res.json()\n      return data \n    }, \n\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`)\n\n      const data = await res.json()\n      return data\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks()\n  },\n}\n</script>"],"sourceRoot":""}]}